@function first($list) {
    @return nth($list, 1);
}
@function last($list) {
    @return nth($list, length($list));
}
@function contains($list,$var) {
    $_out: false;
    @each $item in $list {
        @if $item == $var {
            $_out: true;
        }
    }
    @return $_out;
}
@function sum($list, $force: false) {
    $result: 0;
    @each $item in $list {
        @if type-of($item) == number {
            @if $force and unit($item) {
                $item: $item / ($item * 0 + 1);
            }
            @if unitless($item) {
                $result: $result + $item;
            }
        }
    }
    @return $result;
}
@function replace-nth($list, $index, $value) {
    $result: null;
    @if type-of($index) != number {
        @warn "$index: #{quote($index)} is not a number for `replace-nth`.";
    }
    @else if $index == 0 {
        @warn "List index 0 must be a non-zero integer for `replace-nth`.";
    }
    @else if abs($index) > length($list) {
        @warn "List index is #{$index} but list is only #{length($list)} item long for `replace-nth`.";
    }
    @else {
        $result: ();
        $index: if($index < 0, length($list) + $index + 1, $index);
        @for $i from 1 through length($list) {
            @if $i == $index {
                $result: append($result, $value);
            }
            @else {
                $result: append($result, nth($list, $i));
            }
        }
    }
    @return $result;
}
